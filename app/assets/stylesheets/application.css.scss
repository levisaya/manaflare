/*
 * This is a manifest file that'll be compiled into application.css, which will include all the files
 * listed below.
 *
 * Any CSS and SCSS file within this directory, lib/assets/stylesheets, vendor/assets/stylesheets,
 * or vendor/assets/stylesheets of plugins, if any, can be referenced here using a relative path.
 *
 * You're free to add application-wide styles to this file and they'll appear at the bottom of the
 * compiled file so the styles you add here take precedence over styles defined in any styles
 * defined in the other CSS/SCSS files in this directory. It is generally better to create a new
 * file per style scope.
 *
 *= require_tree .
 *= require_self
 */
@import "bootstrap-sass-official/assets/stylesheets/bootstrap-sprockets";
@import "bootstrap-sass-official/assets/stylesheets/bootstrap";

/* some basic styles. nothing to do with flexbox */
header, footer,
nav, article, aside {
  border: 1px solid black;
  padding: 0.25em;
  margin: 0.25em;
  border-radius: 0.25em;
}
/*
  Force full width & height.
  If this block is removed, the layout height/length will be determined by
  the amount of content in the page. That might result in a page which has
  a footer only a few inches from the top of the viewport, or one which
  scrolls beyond the viewport.
  This forces the layout to always be full screen regardless of how much,
  or how little, content is in place. Neither is "right" or "wrong", there
  are valid cases for each. I just want to be clear what's controlling the
  page/viewport height.
*/
html, body, .viewport {
  width: 100%;
  height: 100%;
  margin: 0;
  overflow: hidden;
}
/* encapsulate the various syntax in helper clases */
/* inspired by http://infrequently.org/2009/08/css-3-progress/ */
/* items flex/expand vertically */
.vbox {
  /* previous syntax */
  display: -webkit-box;
  display:    -moz-box;
  display:         box;
  -webkit-box-orient: vertical;
  -moz-box-orient: vertical;
  -ms-box-orient: vertical;
  box-orient: vertical;
  /* current syntax */
  display: -webkit-flex;
  display:    -moz-flex;
  display:     -ms-flex;
  display:         flex;
  -webkit-flex-direction: column;
  -moz-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}
/* items flex/expand horizontally */
.hbox {
  /* previous syntax */
  display: -webkit-box;
  display:    -moz-box;
  display:     -ms-box;
  display:         box;
  -webkit-box-orient: horizontal;
  -moz-box-orient: horizontal;
  -ms-box-orient: horizontal;
  box-orient: horizontal;
  /* current syntax */
  display: -webkit-flex;
  display:    -moz-flex;
  display:     -ms-flex;
  display:         flex;
  -webkit-flex-direction: row;
  -moz-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
}
.space-between {
  /* previous syntax */
  -webkit-box-pack: justify;
  -moz-box-pack: justify;
  -ms-box-pack: justify;
  box-pack: justify;
  /* current syntax */
  -webkit-justify-content: space-between;
  -moz-justify-content: space-between;
  -ms-justify-content: space-between;
  justify-content: space-between;
}

.main {
  /* previous syntax */
  -webkit-box-flex: 1;
  -moz-box-flex: 1;
  -ms-box-flex: 1;
  box-flex: 1;
  /* current syntax */
  -webkit-flex: 1;
  -moz-flex: 1;
  -ms-flex: 1;
  flex: 1;
}
article {
  /* previous syntax */
  -webkit-box-flex: 5;
  -moz-box-flex: 5;
  -ms-box-flex: 5;
  box-flex: 5;
  /* current syntax */
  -webkit-flex: 5;
  -moz-flex: 5;
  -ms-flex: 5;
  flex: 5;
}
aside, nav {
  /* previous syntax */
  -webkit-box-flex: 1;
  -moz-box-flex: 1;
  -ms-box-flex: 1;
  box-flex: 1;
  /* current syntax */
  -webkit-flex: 1;
  -moz-flex: 1;
  -ms-flex: 1;
  flex: 1;
}

$card_width_mm: 63;
$card_height_mm: 87;
$border_mm: 3;
$inner_border_mm: 1.5;
$text_bar_height_mm: 5;
$image_height_mm: 40;
$text_box_height_mm: 26;

$size-multiplier: 3;

$card-width: ($card_width_mm * $size-multiplier);
$card-height: ($card_height_mm * $size-multiplier);
$border-width: ($border_mm * $size-multiplier);
$inner-border-width: ($inner_border_mm * $size-multiplier);

$text_bar_width: ($card-width - $border-width * 2 - $inner-border-width);
$text_bar_height: ($text_bar_height_mm * $size-multiplier);

$image_height: ($image_height_mm * $size-multiplier);

$text_box_height: ($text_box_height_mm * $size-multiplier);

#play-area {
  width: 100%;
  background-color: cadetblue;
}

#status-sidebar {
  width: $card-width;
  padding-left: 10%;
  background-color: greenyellow;
  margin: 0;
}

#redzone {
  height: $card-height * 1.2px;
  margin-left: 2%;
  margin-right: 2%;
  padding-bottom: 5%;
  background-color: firebrick;
}

.card {
  width: $card-width + px;
  height: $card-height + px;
  background-color: black;
  display: block;
  position: absolute;
  left: 0;
  top: 0;
  border-radius: 4px;
  -webkit-transform: translate(0px, 0px);
  transform: translate(0px, 0px);
}

.card-inner {
  border-radius: ($border-width / 3) + px;
  background-color: sandybrown;
  width: ($card-width - ($border-width * 2)) + px;
  height: ($card-height - ($border-width * 2)) + px;
  position: relative;
  left: $border-width + px;
  top: $border-width + px;
}

.card-text-bar {
  width: $text_bar_width + px;
  height: $text_bar_height + px;
  background-color: darkolivegreen;
  margin-left: auto;
  margin-right: auto;
  border-radius: $inner-border-width+px/($text_bar_height/2)+px;
}

#top-text-bar {
  position: relative;
  top: $inner-border-width + px;
}

#card-image {
  position: relative;
  top: $inner-border-width + px;
  height: $image_height+px;
  width: ($card-width - ($border-width * 2) - ($inner-border-width * 2))+px;
  background: black;
  margin-left: auto;
  margin-right: auto;
}

#card-image > img {
  width: 100%;
  height: 100%;
}

#type-text-bar {
  position: relative;
  top: $inner-border-width + px;
}

#text-box {
  height: $text_box_height + px;
  width: ($card-width - ($border-width * 2) - ($inner-border-width * 2))+px;
  background-color: forestgreen;
  position: relative;
  top: $inner-border-width + px;
  margin-left: auto;
  margin-right: auto;
}

.card-text {
  color: black;
}

.card-text-bar > .card-text {

}